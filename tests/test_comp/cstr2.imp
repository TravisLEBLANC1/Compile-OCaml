var tmp_10;
var e_9;
var a_8;
var e_7;
var n_6;
var a_5;
var a_4;
var a_3;
var t_2;
var closure_1;
var nb_nodes_0;

function fun_0(param_t,closure) {
  var tmp_10;
  var tmp_9;
  var t2_8;
  var t1_7;
  var tmp_6;
  var tmp_5;
  var t2_4;
  var t1_3;
  var tmp_2;
  var t1_1;
  var var_match_0;

  if ((*param_t==1)) {
    var_match_0 = 0;
  } else {
    if ((*param_t==2)) {
      var_match_0 = 0;
    } else {
      if (((*param_t==3)&&(*param_t[1]==2))) {
        var_match_0 = 1;
      } else {
        if (((*param_t==3)&&((*param_t[1]==3)&&true))) {
          t1_1 = *(param_t[1]+(1*4));
          tmp_2 = closure[1];
          var_match_0 = (**tmp_2)(t1_1,tmp_2);
        } else {
          if (((*param_t==3)&&(((*param_t[1]==0)&&true)&&true))) {
            t1_3 = *(param_t[1]+(1*4));
            t2_4 = *(param_t[1]+(2*4));
            tmp_5 = closure[1];
            tmp_6 = closure[1];
            var_match_0 = ((2+(**tmp_5)(t1_3,tmp_5))+(**tmp_6)(t2_4,tmp_6));
          } else {
            if (((*param_t==3)&&(*param_t[1]==1))) {
              var_match_0 = 40;
            } else {
              t1_7 = param_t[1];
              t2_8 = param_t[2];
              tmp_9 = closure[1];
              tmp_10 = closure[1];
              var_match_0 = ((1+(**tmp_9)(t1_7,tmp_9))+(**tmp_10)(t2_8,tmp_10));
            }
          }
        }
      }
    }
  }
  return(var_match_0);
}

main {
  closure_1 = malloc((2*4));
  *closure_1 = &fun_0;
  closure_1[1] = closure_1;
  nb_nodes_0 = closure_1;
  a_3 = malloc((2*4));
  *a_3 = 3;
  a_4 = malloc((2*4));
  *a_4 = 3;
  a_5 = malloc((2*4));
  *a_5 = 3;
  n_6 = malloc((3*4));
  *n_6 = 0;
  e_7 = malloc((1*4));
  *e_7 = 1;
  n_6[1] = e_7;
  a_8 = malloc((2*4));
  *a_8 = 3;
  e_9 = malloc((1*4));
  *e_9 = 1;
  a_8[1] = e_9;
  n_6[2] = a_8;
  a_5[1] = n_6;
  a_4[1] = a_5;
  a_3[1] = a_4;
  t_2 = a_3;
  tmp_10 = nb_nodes_0;
  putint((**tmp_10)(t_2,tmp_10));
}
